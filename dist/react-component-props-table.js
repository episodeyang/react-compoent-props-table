"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = ComponentPropsTable;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactMarkdownit = require("react-markdownit");

var _reactMarkdownit2 = _interopRequireDefault(_reactMarkdownit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Created by ge on 6/19/16.
                                                                                                                                                                                                                              */

/** a table view for the props metadata of a react component generated by
 * react-docgen (loaded by react-docgen-loader with webpack) */
function ComponentPropsTable(props) {
  var _props$className = props.className;
  var className = _props$className === undefined ? "" : _props$className;
  var _props$propMetaData = props.propMetaData;
  var propMetaData = _props$propMetaData === undefined ? [] : _props$propMetaData;

  var _props = _objectWithoutProperties(props, ["className", "propMetaData"]);

  if (className) className += " component-props-table";
  return _react2.default.createElement(
    "table",
    _extends({ className: className, src: 'some list' }, _props),
    _react2.default.createElement(
      "thead",
      null,
      _react2.default.createElement(
        "tr",
        null,
        _react2.default.createElement(
          "th",
          null,
          "Prop Name"
        ),
        _react2.default.createElement(
          "th",
          null,
          "Type"
        ),
        _react2.default.createElement(
          "th",
          null,
          "Is Required"
        ),
        _react2.default.createElement(
          "th",
          null,
          "Default Value"
        ),
        _react2.default.createElement(
          "th",
          null,
          "Description"
        )
      )
    ),
    _react2.default.createElement(
      "tbody",
      null,
      Object.keys(propMetaData).map(function (key) {
        var prop = propMetaData[key];
        return _react2.default.createElement(
          "tr",
          { key: key },
          _react2.default.createElement(
            "td",
            { style: { color: "rgb(17, 147, 154)" } },
            key
          ),
          _react2.default.createElement(
            "td",
            null,
            prop.type ? prop.type.name : ""
          ),
          prop.required ? _react2.default.createElement(
            "td",
            { style: { color: "rgb(255, 76, 34)" } },
            "required"
          ) : _react2.default.createElement(
            "td",
            { style: { color: "#c6c6c6" } },
            "optional"
          ),
          prop.defaultValue ? _react2.default.createElement(
            "td",
            { style: { color: "rgb(236, 171, 32)" } },
            prop.defaultValue.value
          ) : _react2.default.createElement(
            "td",
            { style: { color: "#c6c6c6" } },
            "none"
          ),
          _react2.default.createElement(
            _reactMarkdownit2.default,
            { tagName: "td" },
            prop.description
          )
        );
      })
    )
  );
};

var object = _react.PropTypes.object;

ComponentPropsTable.propTypes = {
  /** this is the `metadata.props` field of what metadata you get from the react-docgen-loader.  */
  propMetaData: object
};
ComponentPropsTable.defaultProps = {
  propMetaData: {}
};